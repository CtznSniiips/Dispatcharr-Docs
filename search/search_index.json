{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<ul> <li> Github repository</li> <li> GH Container images</li> <li> Getting started</li> <li> Configuration</li> </ul>"},{"location":"#overview","title":"Overview","text":"<p>Dispatcharr helps you...</p> <ul> <li>Collect, organize, and serve your IPTV streams.</li> <li>Manage EPG (Electronic Program Guide) data.</li> <li>Perform advanced filtering, playlist (M3U) importing, and re-streaming.</li> <li>Expose a friendly front-end for interfacing with your streams, all from a single self-hosted solution.</li> </ul> <p>Dispatcharr is a IPTV streaming playlist (m3u m3u8) editor and proxy. IPTV proxy application that enables users to curate complex M3U playlists, manage them, and proxy them to various applications like Emby, Plex, Jellyfin, or any other compatible streaming platform. It offers the flexibility to import an unlimited number of M3U and EPG files, supporting a wide range of streaming content. Dispatcharr delivers fast and reliable streaming across multiple operating systems. </p> <p>Additional features, such as robust proxying and support for multiple clients on a single backend stream, make it a comprehensive solution for today\u2019s streaming needs. </p> <ul> <li>Proxy Streaming Engine - Stream more reliably, with fewer provider connections and automatic stream switching when buffering is detected</li> <li>Real-Time Stats Dashboard - Monitor stream health and client activity live. </li> <li>EPG Auto-Match - Automatically map guide data to your channels </li> <li>Output Compatibility - Works with Plex, Jellyfin, Emby, ChannelsDVR and more (HDHomeRun, M3U, XMLTV, Xtream Codes API)</li> </ul>"},{"location":"#license-cc-by-nc-sa","title":"License (CC BY-NC-SA)","text":"<p>This project is released under the Creative Commons BY-NC-SA license.</p> <p>BY (Attribution): You must give appropriate credit if you share or modify this project. NC (Non-Commercial): You may not use this work for commercial purposes. SA (ShareAlike): If you remix or transform it, you must distribute your contributions under the same license.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Pull requests, issue reports, and feature suggestions are welcome! We only ask that:</p> <p>You agree to respect the CC BY-NC-SA license. You follow best practices and the coding standards used in the project. You\u2019re respectful of all contributors in your communications.</p> <p>Your contributions\u2014code, documentation, or even bug reports\u2014are greatly appreciated!</p>"},{"location":"api/","title":"API","text":""},{"location":"api/#swagger","title":"Swagger","text":"<p>Open a web browser and go to <code>http://{your_ip_here}:9191/swagger/</code></p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Dispatcharr can be installed using Docker on various platforms, including Windows, macOS, Proxmox, and Unraid. This guide provides detailed instructions for each method.</p>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>See installation guide.</p>"},{"location":"getting-started/#startup","title":"Startup","text":"<p>After installation and starting up, open a web browser and go to <code>http://{your_ip_here}:9191</code> Create your user account by entering a username and password that you will remember. You can optionally add an email address.</p> <p>Note</p> <p>Email addresses are currently unused but may be used in future versions.</p>"},{"location":"getting-started/#adding-m3u-and-epg","title":"Adding M3U and EPG","text":"<ol> <li>Add your first M3U by clicking the <code>Add M3U</code> button on the right-hand side under \"Getting started\".  </li> <li>This will take you to the M3U &amp; EPG Manager (also accessible from the navbar on the left).  </li> </ol> Screenshot <ol> <li>Click the <code>Add</code> button under M3U Accounts to add an M3U  </li> <li>Click the <code>Add EPG</code> button under EPGs to add an episode guide</li> </ol> Screenshot M3UEPG <ul> <li>Enter a name for your M3U Account</li> <li>Choose the account type (Xtream Codes or Standard M3U) and enter the URL (if using Xtream Codes, enter the associated username and password)   </li> <li>You can optionally set a max number of concurrent streams allowed, or leave at 0 for unlimited.  </li> <li>Click <code>Save</code>. </li> </ul> Screenshot <ul> <li>Click the corresponding  edit icon of the just added M3U account<ul> <li>Click the <code>Groups</code> button and select which groups you'd like to add, then click <code>Save and Refresh</code></li> </ul> </li> <li>Depending on the size of your M3U, it may take some time to load. </li> </ul> <ul> <li>Add an episode guide by clicking the <code>Add EPG</code> button under the EPGs section. .</li> <li>Enter a name for your EPG, then enter the URL and if necessary, API key. </li> <li>Choose the source type, then hit \"Submit\".</li> <li>Depending on the size of your EPG, it may take some time to load.</li> </ul> Screenshot"},{"location":"getting-started/#creating-your-first-channel","title":"Creating your first channel","text":"<ul> <li>Go to the main Channels screen in the navbar. </li> <li>If an M3U was added and successfully scanned, you should see a list of streams on the right side of the page under \"Streams\".  </li> <li>Find a stream in the list, or search for one by typing in the \"Name\" column header. </li> <li>Press the  \"Create New Channel\" button to add the stream to a new channel.  </li> </ul> Screenshot <ul> <li>If you'd like to add a backup stream from a different provider, find the corresponding stream in the streams list and press the  \"Add to Channel\" button under the \"Actions\" column</li> </ul>"},{"location":"getting-started/#media-playback-setup","title":"Media Playback Setup","text":""},{"location":"getting-started/#jellyfin","title":"Jellyfin","text":""},{"location":"getting-started/#add-tv-source","title":"Add TV source","text":"<ul> <li>Jellyfin can accept HDHR or M3U format. </li> <li>In Dispatcharr, navigate to the \"Channels\" page then click either the HDHR or M3U buttons at the top of the page, and copy the provided URL.  </li> </ul> HDHRM3U Screenshot Screenshot <ul> <li>Navigate to your Jellyfin page and click the Admin Panel Icon to manage your Jellyfin server.  </li> <li>Click \"Live TV\" under the Live TV section, then the '+' button next to \"Tuner Devices\".  </li> </ul> Screenshot <ul> <li>Under 'Tuner Type', choose HD Homerun if using the HDHR URL, or M3U Tuner if using the M3U URL from Dispatcharr.  </li> <li>Paste the URL and save.  </li> </ul> <p>Note</p> <p>If adding as M3U, leave the Simultaneous stream limit set as \"0\", since stream limits will be handled by Dispatcharr.  </p>"},{"location":"getting-started/#add-guide-data-source","title":"Add Guide Data Source","text":"<ul> <li>To add guide data from Dispatcharr, navigate to the Dispatcharr \"Channels\" page then click the EPG button at the top of the page and copy the provided URL.</li> </ul> Screenshot <ul> <li>In Jellyfin Live TV settings page, click the '+' next to \"TV Guide Data Providers\".</li> </ul> Screenshot <ul> <li>Choose 'XMLTV' and paste the URL</li> <li>EPG data will be automatically mapped.</li> </ul>"},{"location":"getting-started/#plex","title":"Plex","text":"<ul> <li>Plex accepts the HDHR format and can mostly find HDHR units on its own. </li> <li>In Dispatcharr, navigate to the \"Channels\" page then click the HDHR button at the top of the page, and copy the provided URL.  </li> </ul> Screenshot <ul> <li>Navigate to your Plex page and click the Settings icon to manage your plex server.  </li> <li>Scroll down to <code>Manage</code> and click <code>Live TV &amp; DVR</code>, then <code>Set Up Plex Tuner</code>.</li> <li>Plex should automatically find your Dispatcharr instance, but if it doesn't click the <code>Don't see your HDHomeRun device? Enter its network address manually</code> and enter the HDHR URL you copied from Dispatcharr and press <code>Connect</code>.</li> </ul> Screenshot <ul> <li>Plex will provide you with their EPG if they support your country and postal code. If they do not provide EPG for you or if you want to use your own you can add EPG from Dispatcharr.</li> </ul> <p>Warning</p> <p>Please note, if plex EPG does not exist for your area you will be forced to provide your own before you can continue.</p> Screenshot <p></p> <ul> <li>You can now map the epg to channels if any did not automatically match.</li> </ul> Screenshot <p></p> <ul> <li>Press <code>Continue</code> and plex will now load in the channels and EPG data</li> </ul> <p>Missing logos?</p> <p>Add <code>?cachedlogos=false</code> to the end of your EPG to bypass logo caching which Plex does not currently support. </p>"},{"location":"getting-started/#channelsdvr","title":"ChannelsDVR","text":"<ul> <li>In Dispatcharr, navigate to the \"Channels\" page then click the M3U button at the top of the page, and copy the provided URL. </li> </ul> Screenshot <ul> <li>Navigate to your ChannelsDVR server page and go to \"Settings\" and select \"Sources\"</li> </ul> Screenshot <ul> <li>Under Live TV press the green button \"Add Source\"</li> </ul> Screenshot <ul> <li>On the popup choose Custom Channels</li> </ul> Screenshot <ul> <li>On the Custom Channels menu use the following options:<ul> <li>Nickname: Add a name for your M3U</li> <li>Stream Format: MPEG-TS</li> <li>Source: Use URL and paste the M3U link from Dispatcharr</li> <li>Options: <ul> <li>Refresh URL daily</li> <li>Prefer channel-number from M3U</li> <li>Prefer channel logos from M3U if you want to use logos shown/managed in Dispatcharr</li> <li>No Stream Limit (Dispatcharr manages the stream limits)</li> </ul> </li> <li>XMLTV Guide Data:<ul> <li>If you set a Gracenote ID in every channel and want ChannelsDVR to build a full 14 day guide using their data then do not add a guide and press Save.</li> <li>If you want to use the Guide Data from Dispatcharr then put the EPG link from Dispatcharr, select the refresh frequency, and press Save.</li> </ul> Screenshot </li> </ul> </li> </ul>"},{"location":"getting-started/#emby","title":"Emby","text":""},{"location":"getting-started/#add-tv-source_1","title":"Add TV source","text":"<ul> <li>Emby can accept HDHR or M3U format. </li> <li>In Dispatcharr, navigate to the \"Channels\" page then click either the HDHR or M3U buttons at the top of the page, and copy the provided URL.  </li> </ul> HDHRM3U Screenshot Screenshot <ul> <li>Navigate to your Emby page and click the Settings icon to manage your emby server.  </li> <li>Click \"Live TV\", then \"Add TV source\".  </li> <li>Choose HD Homerun if using the HDHR URL, or M3U if using the M3U URL from Dispatcharr.  </li> <li>Paste the URL and save.  </li> </ul> <p>Note</p> <p>If adding as M3U, leave the Simultaneous stream limit set as \"0\", since stream limits will be handled by Dispatcharr.  </p>"},{"location":"getting-started/#add-guide-data-source_1","title":"Add Guide Data Source","text":"<ul> <li>You can use Emby provided guide data, guide data from dispatcharr, or a combination of both.</li> <li>To add Emby provided guide data, click \"Add Guide Data Source\", choose your country, then choose \"Emby Guide Data\" under Guide Data Source and hit Next.</li> <li>Follow the provided prompts to find the channel data you need. You may add multiple Emby Guide Data sources if needed.</li> <li>Emby will attempt to match channels to guide data, but you may need to manually map the guide data to your channels. You can do so at \"Live TV\" &gt; Channels, or in the Emby metadata manager.</li> <li>To add guide data from dispatcharr, navigate to the dispatcharr \"Channels\" page then click the EPG button at the top of the page and copy the provided URL.</li> <li>In Emby Live TV settings page, click \"Add Guide Data Source\", choose your country, then choose \"XMLTV\" Guide Data Source and hit Next.</li> <li>EPG data will be automatically mapped.</li> </ul>"},{"location":"installation/","title":"Installation","text":"<p>Dispatcharr can be installed using Docker on various platforms, including Windows, macOS, Proxmox, and Unraid. This guide provides detailed instructions for each method.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Ensure Docker and Docker Compose are installed on your platform.</p> <ul> <li>Docker Desktop for Windows</li> <li>Docker Desktop for Mac</li> <li>Docker on Linux</li> <li>Docker on Proxmox (LXC)</li> <li>Docker on Unraid</li> </ul>"},{"location":"installation/#docker-compose","title":"Docker Compose","text":"<p>Dispatcharr is deployed using the following <code>docker-compose.yml</code>:</p> <pre><code>services:\n  dispatcharr:\n    # build:\n    #   context: .\n    #   dockerfile: Dockerfile\n    image: ghcr.io/dispatcharr/dispatcharr:latest\n    container_name: dispatcharr\n    ports:\n      - 9191:9191\n    volumes:\n      - dispatcharr_data:/data\n    environment:\n      - DISPATCHARR_ENV=aio\n      - REDIS_HOST=localhost\n      - CELERY_BROKER_URL=redis://localhost:6379/0\n      - DISPATCHARR_LOG_LEVEL=info\n      # Process Priority Configuration (Optional)\n      # Lower values = higher priority. Range: -20 (highest) to 19 (lowest)\n      # Negative values require cap_add: SYS_NICE (uncomment below)\n      #- UWSGI_NICE_LEVEL=-5   # uWSGI/FFmpeg/Streaming (default: 0, recommended: -5 for high priority)\n      #- CELERY_NICE_LEVEL=5   # Celery/EPG/Background tasks (default: 5, low priority)\n    #\n    # Uncomment to enable high priority for streaming (required if UWSGI_NICE_LEVEL &lt; 0)\n    #cap_add:\n    #  - SYS_NICE\n    # Optional for hardware acceleration\n    #devices:\n    #  - /dev/dri:/dev/dri  # For Intel/AMD GPU acceleration (VA-API)\n    # Uncomment the following lines for NVIDIA GPU support\n    # NVidia GPU support (requires NVIDIA Container Toolkit)\n    #deploy:\n    #  resources:\n    #      reservations:\n    #          devices:\n    #              - driver: nvidia\n    #                count: all\n    #                capabilities: [gpu]\n\n\nvolumes:\n  dispatcharr_data:\n</code></pre>"},{"location":"installation/#installation-steps","title":"Installation Steps","text":""},{"location":"installation/#windows-docker","title":"Windows Docker","text":"<ol> <li>Install and open Docker Desktop.</li> <li>Create a directory, e.g., <code>C:\\Dispatcharr</code>, and inside it create a <code>docker-compose.yml</code> with the provided content.</li> <li>Open a PowerShell or Command Prompt window in this directory.</li> <li> <p>Start Dispatcharr with:</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol>"},{"location":"installation/#macos-docker","title":"macOS Docker","text":"<ol> <li>Install and start Docker Desktop.</li> <li>Create a directory for Dispatcharr, e.g., <code>~/Dispatcharr</code>.</li> <li>Create a <code>docker-compose.yml</code> file with the provided content.</li> <li> <p>Launch Terminal and navigate to your directory:</p> <pre><code>cd ~/Dispatcharr\n</code></pre> </li> <li> <p>Run the container:</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol>"},{"location":"installation/#linux-docker","title":"Linux Docker","text":"<p>Warning</p> <p>Some distros use outdated versions of Docker so it is recommended to install directly from Docker</p> <p>Install Docker using the official instructions, such as those for Ubuntu</p> Ubuntu example <ol> <li>Uninstall old versions.</li> </ol> <pre><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done\n</code></pre> <ol> <li>Setup Dockers own apt repository for up-to-date versions.</li> </ol> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n$(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <ol> <li>Install Docker.</li> </ol> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <ol> <li> <p>Create and navigate to your Dispatcharr directory.     <pre><code>mkdir ~/dispatcharr &amp;&amp; cd ~/dispatcharr\n</code></pre></p> </li> <li> <p>Add your own <code>docker-compose.yml</code> or use the provided example.</p> </li> <li> <p>Launch Dispatcharr:</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <p>Note</p> <p>If you wish to use the <code>docker compose</code> commands without sudo you may need to follow Dockers official guide here.</p>"},{"location":"installation/#proxmox","title":"Proxmox","text":"<ol> <li> <p>Create an Ubuntu LXC container or VM with Docker and Docker Compose installed.</p> <pre><code>apt install docker.io docker-compose -y\n</code></pre> </li> <li> <p>Create and navigate to your Dispatcharr directory:</p> <pre><code>mkdir ~/dispatcharr &amp;&amp; cd ~/dispatcharr\n</code></pre> </li> <li> <p>Add your <code>docker-compose.yml</code>.</p> </li> <li> <p>Launch Dispatcharr:</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol>"},{"location":"installation/#unraid","title":"Unraid","text":"<ol> <li>Select the \"Apps\" tab of your Unraid server</li> <li>Search \"Dispatcharr\" and Select Install</li> <li>Leave the defaults unless you need to change them</li> </ol>"},{"location":"installation/#building-from-source-unsupported","title":"Building from Source (Unsupported)","text":"<ol> <li> <p>Clone this repository:     <pre><code>git clone https://github.com/Dispatcharr/Dispatcharr.git\ncd Dispatcharr\n</code></pre></p> </li> <li> <p>Create and activate a virtual environment (optional but recommended):     <pre><code>python -m venv venv\nsource venv/bin/activate\n</code></pre></p> </li> <li> <p>Install required dependencies:     <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Run database migrations and start the server (Django + React front-end):</p> <pre><code>python manage.py migrate\npython manage.py runserver\n</code></pre> </li> <li> <p>For the front-end, navigate to the frontend/ folder and run:</p> <pre><code>npm install\nnpm run build\n</code></pre> </li> <li> <p>Once running, visit http://localhost:9191 (or the port you exposed) in your browser.</p> </li> </ol>"},{"location":"installation/#accessing-dispatcharr","title":"Accessing Dispatcharr","text":"<p>Open your web browser and navigate to:</p> <p>http://localhost:9191</p> <p>Replace <code>localhost</code> with your server's IP address if accessing remotely.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"","boost":2},{"location":"troubleshooting/#stream-failover-not-working","title":"Stream Failover not working","text":"<ul> <li>Check if the Stream Profile (default and/or for the channel) is set to redirect. Stream failover will not work for redirect</li> </ul>","boost":2},{"location":"troubleshooting/#will-you-implement-x-new-feature","title":"Will you implement X new feature?","text":"<ul> <li>Check existing feature requests in our discord or github. If it's not already requested, feel free to request. </li> </ul>","boost":2},{"location":"troubleshooting/#does-dispatcharr-support-hardware-acceleration","title":"Does dispatcharr support hardware acceleration?","text":"<ul> <li>You can use hardware acceleration with custom ffmpeg stream profiles. This will require mapping your hardware to the container and setting up a custom ffmpeg stream profile. </li> </ul>","boost":2},{"location":"troubleshooting/#logos-are-missing-in-plex","title":"Logos are missing in Plex","text":"<ul> <li>Plex does not support cached logos. Add <code>?cachedlogos=false</code> to the end of your EPG to bypass logo caching. </li> </ul>","boost":2},{"location":"troubleshooting/#how-do-i-output-to-xc-api","title":"How do I output to XC API?","text":"<ul> <li>There must be at least one user set up with an XC password</li> <li>For URL, use your IP address and port <code>http://{your_ip_here}:9191</code></li> <li>Username is your user's username</li> <li>Password is the XC password set for the user</li> </ul>","boost":2},{"location":"troubleshooting/#how-do-i-turn-on-debug-logs","title":"How do I turn on debug logs?","text":"<ul> <li>Add this to your compose/environmental variables: <code>DISPATCHARR_LOG_LEVEL=debug</code></li> </ul>","boost":2},{"location":"troubleshooting/#i-got-new-credentials-or-url-from-my-provider-what-should-i-do","title":"I got new credentials (or URL) from my provider, what should I do?","text":"<ol> <li>Make a backup!</li> <li>Remove URL from Settings &gt;&gt;&gt; Stream Settings &gt;&gt;&gt; M3U Hash Key</li> <li>Once re-hashing has finished, change the settings in your M3U account</li> <li>Refresh the account</li> <li>Once refresh is complete, change your hash settings back</li> </ol>","boost":2},{"location":"troubleshooting/#i-changed-my-network-settings-and-accidently-locked-myself-out-how-can-i-reset-it","title":"I changed my network settings and accidently locked myself out. How can I reset it?","text":"<ol> <li>Access the CLI of the container</li> <li>cd to /app</li> <li>Run the following command: <code>python manage.py reset_network_access</code></li> </ol>","boost":2},{"location":"troubleshooting/#how-can-i-make-a-backup-of-the-database","title":"How can I make a backup of the database?","text":"<ol> <li>Access the CLI of the container</li> <li>Run this command to make a new directory: <code>mkdir /data/manualbackups</code></li> <li>Run this command to create the backup (change Backup-mm-dd-yy to a name you'd like): <code>pg_dump -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB -Fc -v -f \"/data/manualbackups/Backup-mm-dd-yy\"</code> </li> </ol> <p>To Restore that backup follow these steps:  </p> <ol> <li>Access the CLI of the container  </li> <li>Run this command to restore the backup: <code>pg_restore --clean -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB -v \"/data/manualbackups/Backup-mm-dd-yy\"</code> </li> <li>Restart the container  </li> </ol>","boost":2},{"location":"user-guide/","title":"User Guide","text":""},{"location":"user-guide/#channels","title":"Channels","text":"<p>From the channels page you can create and manage all added channels, streams, and external links</p>"},{"location":"user-guide/#channels_1","title":"Channels","text":"<ul> <li>Choose the \"Channels Profile\" by clicking the drop-down menu under the Channels header. The default profile is \"All\"<ul> <li>Create a new Channels Profile by clicking the  icon next to the drop-down menu</li> <li>Channels Profiles can be used to create subsets of your Channels list. Each profile will have it's own HDHR, M3U, and EPG link generated. When creating XC users, you can select which Channels Profiles each user has access to</li> <li>To remove channels from a Channels Profile, click the corresponding toggle icon in the  column to toggle it off<ul> <li>For bulk toggling, use the channel check boxes to select multiple channels, then click the toggle icon</li> </ul> </li> </ul> </li> <li>Search channel names by clicking in the \"Name\" column header</li> <li>Filter by EPG by clicking in the \"EPG\" column header</li> <li>Search by channel group by clicking in the \"Group\" column header</li> <li>Edit a channel by clicking the corresponding  \"Edit Channel\" icon under the \"Actions\" column <ul> <li>Channel Name - Edit the name for your Channel</li> <li>Channel Group - Edit the group for your channel. If you want to create and add to a new group, click the  icon</li> <li>Stream Profile - Click here if you want to use something other than the default stream profile for this channel</li> <li>User Level Access - Set which user types can access this channel via Xtream Codes output</li> <li>Logo - Choose a logo, upload a new one, or use logo from the assigned EPG</li> <li>Channel # - Edit the channel number. Currently only integers are accepted</li> <li>TVG-ID - Edit the TVG-ID field for your channel. Auto-match tries to match episode guide to this field</li> <li>Gracenote StationID - Edit the Gracenote ID for your channel. These are typically 5 or 6 digit numbers that Gracenote (a common EPG provider) can use to identify TV channels.</li> <li>EPG - Click in the box to manually choose an EPG entry, click \"Use Dummy\" to assign a dummy EPG entry, or click \"Auto Match\" to attempt EPG auto-match</li> </ul> </li> <li>Delete a channel by clicking the corresponding  \"Delete channel\" icon under the \"Actions\" column </li> <li>Preview (play) a channel by clicking the corresponding  \"Preview channel\" icon under the \"Actions\" column </li> <li> <p>Toggle the channel check boxes to use the bulk editing buttons above the grid on the selected channels, or to add streams to channels</p> <ul> <li>\" Edit\" to bulk edit channels</li> <li>\" Delete\" to bulk delete channels</li> <li>\" Add\" to bulk Add channels. Select multiple Streams under the \"Streams\" table to create a new channel for each selected stream.</li> <li> <p>\"\" to see additional bulk editing options</p> <ul> <li>\" Assign #s\" to assign channel numbers</li> <li>\" Auto-Match\" to auto match channels to EPG</li> <li>\" Edit Groups\" to open the Group Manager</li> </ul> </li> <li> <p>Click the  \"Add to channel\" icon under the Streams Actions column to add that stream to the selected channels</p> </li> </ul> </li> <li> <p>Within Dispatcharr, a single channel can be composed of multiple streams. The system initiates playback using the first stream listed in the channel. According to the configured Proxy Settings, Dispatcharr monitors for buffering and, if detected, automatically switches to the next stream in the channel. This process of monitoring and switching continues until all streams are exhausted, ensuring consistent playback quality.</p> </li> <li>For each stream listed within a channel, Dispatcharr will display the source of the stream as defined in the M3U &amp; EPG Manager, a direct link to stream, and an option to preview the stream  .<ul> <li>Dispatcharr gathers statistics for each stream provided that the Default Stream Profile used for playback is configured for FFMPEG.   Once captured, stats such as video resolution, frames per second, video encoder format, audio format, audio codec, and stream bitrate will be displayed.  For each captured stream, clicking 'Show Advanced Options' provides even more detail on the quality of source stream.  </li> </ul> </li> </ul>"},{"location":"user-guide/#streams","title":"Streams","text":"<ul> <li>Search stream names by clicking in the \"Name\" column header</li> <li>Search by M3U group by clicking in the \"Group\" column header</li> <li>Search by M3U name by clicking the \"M3U\" column header</li> <li>Create a new channel by clicking the corresponding  \"Create New Channel\" icon under the \"Actions\" column </li> <li>Add a stream to an existing channel by clicking the corresponding  \"Add to Channel\" button under the \"Actions\" column </li> <li>Preview (play) a stream by clicking the corresponding  icon under the \"Actions\" column, then press \"Preview Stream\"</li> <li>Toggle the stream check boxes to use the bulk editing buttons above the grid on the selected streams<ul> <li>\" Add streams to channel\" to add the checked streams to the checked channel(s) </li> <li>\" Remove\" to bulk remove streams</li> <li>\" Create Channels\" to create a new channel for each selected stream</li> </ul> <p>Note</p> <p>For every selected stream, a corresponding new channel will be created. For example, if 3 streams are selected, 3 new channels will be created.</p> </li> <li>\" Create Stream\" to create a new stream not associated with any of your uploaded M3Us</li> </ul>"},{"location":"user-guide/#links","title":"Links","text":"<p>The \"Links\" section has buttons to see and copy the external links needed by a client</p> <ul> <li> HDHR - Use this link for clients that use HD Homerun format</li> <li> M3U - Use this link for clients that use M3U format<ul> <li>Advanced options<ol> <li>Bypass logo caching by adding the following to your URL <code>?cachedlogos=false</code> (Default true)</li> <li>Set what is used for the TVG-ID field (Options: channel_number (default), tvg_id, gracenote) <code>?tvg_id_source=gracenote</code></li> <li>URLs output in the M3U will be the direct URL from the first stream in the channel list <code>?direct=true</code> (Default false)</li> <li>Combine multiple options <code>?cachedlogos=false&amp;tvg_id_source=gracenote</code></li> </ol> </li> </ul> </li> <li> EPG - Use this link to provide your client with episode guide data that matches your channels<ul> <li>Advanced options<ol> <li>Bypass logo caching by adding the following to your URL (useful for Plex) <code>?cachedlogos=false</code> </li> <li>Use Gracenote ID's for TVG-ID's by adding the following to your URL (useful for Emby) <code>?tvg_id_source=gracenote</code></li> <li>Number of days to output the epg for <code>?days=4</code> (Default 0 = all)</li> <li>Combine multiple options <code>?cachedlogos=false&amp;tvg_id_source=gracenote&amp;days=7</code></li> </ol> </li> </ul> </li> </ul>"},{"location":"user-guide/#vods","title":"VODs","text":"<p>View, search, and play VOD content if available from your provider</p> <p>Note</p> <p>To view VOD content you must have added at least one \"VOD - Movies\" or \"VOD - Series\" group in the M3U account manager</p>"},{"location":"user-guide/#m3u-epg-manager","title":"M3U &amp; EPG Manager","text":"<p>From this page you can add and maintain your M3U accounts and EPGs</p>"},{"location":"user-guide/#m3u-accounts","title":"M3U accounts","text":"<ul> <li>\" Add\" - Click this button to add new M3U accounts <ul> <li>Name - A name for your M3U account</li> <li>URL - The M3U URL (not required if uploading an M3U file)</li> <li>Account Type - Standard for direct M3U URLs, Xtream Codes for panel-based services</li> <li>Enable VOD Scanning - Toggle on/off scanning for VOD content</li> <li>Upload files - If uploading a local M3U file (not required if M3U URL is used)</li> <li>Max Streams - Set a number for the max number of concurrent streams allowed for your account. For unlimited, set to 0</li> <li>User-Agent - If you want to set a specific user-agent for this account</li> <li>Refresh Interval (hours) - How often (in number of hours) to refresh the M3U URL</li> <li>Stale Stream Retention (days) - Streams not seen for this many days will be removed.  For immediate deletion, set to 0</li> <li>VOD Priority - Priority for VOD provider selection (higher numbers = higher priority). Used when multiple providers offer the same content.</li> <li>Is Active - Toggle whether this account is active or not</li> </ul> <p>Note</p> <p>M3Us can be automatically added into dispatcharr by adding M3U file(s) into the <code>/data/m3us</code> folder and if <code>Auto-Import Mapped Files</code> is enabled under Settings &gt; Stream Settings</p> </li> <li>You can click column headers to change the sort order of existing M3U accounts</li> <li> <p>Actions column</p> <ul> <li> <p> edit icon to edit the associated M3U account</p> <ul> <li>\"Filters\" button - Opens the Filters Manager<ul> <li>Click 'New' to add filters.  Filters process in order, and once matched no additional rules are evaluated.  Filters may be ordered using the drag-and-drop anchor to the left of the rule, and edited/deleted using the icons to the right of the rule<ul> <li>Field: selects which stream attribute to filter on: \"Group\", \"Stream Name\" or \"Stream URL\"</li> <li>Regex Pattern: enter a valid regular expression to match the Field to</li> <li>Exclude: toggle to determine include/exclude based on the regular expression</li> <li>Case Sensitive: toggle to determine case sensitivity for the regular expression</li> </ul> </li> <li>Select 'Save' to add the newly created filter </li> <li>Add additional filters to refine the selected Field values as needed</li> </ul> </li> <li> <p>\"Groups\" button - Opens the Group Manager</p> <ul> <li>Automatically enable new groups discovered on future scans - When disabled, new groups from the M3U source will be created but disabled by default. You can enable them manually later.</li> <li>Filter visible groups with the search box at the top of the group manager</li> <li>Ignore streams from groups by de-selecting them</li> <li>Auto Channel Sync (for Live groups only): When enabled, channels will be automatically created for all streams in the group during M3U updates, and removed when streams are no longer present. <ul> <li>Start Channel #: Set a starting channel number for each group to organize your channels.</li> <li>Advanced options:<ul> <li>Force Dummy EPG: Sets a dummy EPG for the channel that matches the channel name</li> <li>Override Channel Group: Set a channel group for the created channels that differs from the group you selected</li> <li>Channel Name Find &amp; Replace (Regex): Search and replace to rename your channels. By default the channel name will match the stream name</li> <li>Channel Name Filter (Regex): Only create channels from streams which match your filter criteria</li> <li>Channel Profile Assignment: Allows you to choose which profile(s) to include the created channels in (default All)</li> <li>Channel Sort Order: Choose the sort order for your created channels (Provider order is default)</li> <li>Stream Profile Assignment: Allows you to change the stream profile for the created channels from default.</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\"Profiles\" button - Allows you to add a second set of credentials for the same provider. </p> </li> </ul> <p>Info</p> <p>Let's say you have 3 accounts you want to add to dispatcharr. 2 from Provider-A and 1 from Provider-B. Rather than adding three separate M3U accounts, you could add Provider-A once and set up a profile to use the username and password from each Provider-A account under the same M3U account. 1. Set up Provider-A as an M3U account in the M3U &amp; EPG manager. 2. Click the corresponding yellow edit icon under the Actions column. 3. Click the \"Profiles\" button. 4. Click the \"New\" button. 5. The \"Search Pattern (Regex)\" and \"Replace Pattern\" fields will act as a search and replace in your m3u file.  </p> <p>Example</p> Example URL Search Pattern Replace Pattern <code>http://provider.com/live/username1/password1/stream</code> <code>username1/password1</code> <code>username2/password2</code> </li> <li> <p> delete icon to remove the associated M3U account</p> </li> <li> refresh icon to manually refresh/update the associated M3U account</li> </ul> </li> </ul>"},{"location":"user-guide/#epgs","title":"EPGs","text":"<ul> <li>\" Add EPG\" - Click this button to add a new EPG<ul> <li>Standard EPG Source - To add a standard XMLTV EPG source<ul> <li>Name - A name for your EPG</li> <li>URL - The URL for your EPG </li> <li>API Key - API key associated with your EPG, if required</li> <li>Source Type - Choose XMLTV or Schedules Direct depending on your EPG provider format</li> <li>Refresh Interval (hours) - How often (in number of hours) to refresh the EPG</li> </ul> <p>Note</p> <p>EPGs can be automatically added into dispatcharr by adding EPG file(s) into the <code>/data/epgs</code> folder and if <code>Auto-Import Mapped Files</code> is enabled under Settings &gt; Stream Settings</p> </li> <li>Dummy EPG Source - To add a customized dummy EPG          <ul> <li>Name - A name for your custom dummy EPG</li> <li>Name Source (Required) - Choose whether to parse the channel name or a stream name assigned to the channel</li> <li>Title Pattern (Required) - Regex pattern to extract title information (e.g., team names, league). Example: <code>(?&lt;league&gt;\\w+) \\d+: (?&lt;team1&gt;.*) VS (?&lt;team2&gt;.*)</code></li> <li>Time Pattern (Optional) - Extract time from channel titles. Required groups: 'hour' (1-12 or 0-23), 'minute' (0-59), 'ampm' (AM/PM - optional for 24-hour). Examples: <code>@ (?&lt;hour&gt;\\d+):(?&lt;minute&gt;\\d+)(?&lt;ampm&gt;AM|PM) for '8:30PM'</code> OR <code>@ (?&lt;hour&gt;\\d{1,2}):(?&lt;minute&gt;\\d{2}) for '20:30'</code></li> <li>Date Pattern (Optional) - Extract date from channel titles. Groups: 'month' (name or number), 'day', 'year' (optional, defaults to current year). Examples: <code>@ (?&lt;month&gt;\\w+) (?&lt;day&gt;\\d+)</code> for 'Oct 17' OR <code>(?&lt;month&gt;\\d+)/(?&lt;day&gt;\\d+)/(?&lt;year&gt;\\d+)</code> for '10/17/2025'</li> <li>Title Template (Optional) - Format the EPG title using extracted groups. Use {time} (12-hour: '10 PM') or {time24} (24-hour: '22:00'). Example: <code>{league} - {team1} vs {team2} @ {time}</code></li> <li>Description Template (Optional) - Format the EPG description using extracted groups. Use {time} (12-hour) or {time24} (24-hour). Example: <code>Watch {team1} take on {team2} at {time}!</code></li> <li>Upcoming Title Template (Optional) - Title for programs before the event starts. Use {time} (12-hour) or {time24} (24-hour). Example: <code>{team1} vs {team2} starting at {time}.</code></li> <li>Upcoming Description Template (Optional) - Description for programs before the event. Use {time} (12-hour) or {time24} (24-hour). Example: <code>Upcoming: Watch the {league} match up where the {team1} take on the {team2} at {time}!</code></li> <li>Ended Title Template (Optional) - Title for programs after the event has ended. Use {time} (12-hour) or {time24} (24-hour). Example: <code>{team1} vs {team2} started at {time}.</code></li> <li>Ended Description Template (Optional) - Description for programs after the event. Use {time} (12-hour) or {time24} (24-hour). Example: <code>The {league} match between {team1} and {team2} started at {time}.</code></li> <li>Event Timezone (Required) - The timezone of the event times in your channel titles. DST (Daylight Saving Time) is handled automatically! All timezones supported by pytz are available.</li> <li>Output Timezone (Optional) - Display times in a different timezone than the event timezone. Leave empty to use the event timezone. Example: Event at 10 PM ET displayed as 9 PM CT.</li> <li>Program Duration (minutes) (required) - Default duration for each program</li> <li>Categories (Optional) - EPG categories for these programs. Use commas to separate multiple (e.g., Sports, Live, HD). Note: Only added to the main event, not upcoming/ended filler programs.</li> <li>Include Date Tag - Include the  tag in EPG output with the program's start date (YYYY-MM-DD format). Added to all programs. <li>Include Live Tag - Mark programs as live content with the  tag in EPG output. Note: Only added to the main event, not upcoming/ended filler programs.</li> <li>Sample Channel Name - Test your patterns and templates with a sample channel name to preview the output. Enter a sample channel name to test pattern matching and see the formatted output</li> <li>You can click column headers to change the sort order of existing EPGs</li> <li>Actions column<ul> <li> edit icon to edit the associated EPG</li> <li> delete icon to remove the associated EPG</li> <li> refresh icon to manually refresh/update the associated EPG</li> </ul> </li>"},{"location":"user-guide/#tv-guide","title":"TV Guide","text":"<ul> <li>The TV Guide page will by default display channels for which there is EPG data loaded. </li> <li>You can search by channel name and/or filter by channel groups and profiles.</li> <li>Click a channel logo to preview the channel. </li> <li>Click guide entries to expand guide data, preview the channel, or set to record.</li> </ul> <p>Note</p> <p>You can record by channel and time from the DVR page</p>"},{"location":"user-guide/#dvr","title":"DVR","text":"<ul> <li>The DVR page allows you to manage your current and future recordings and set new recordings based on channel and time.</li> </ul>"},{"location":"user-guide/#stats","title":"Stats","text":"<ul> <li>The Stats page shows info on all active streams<ul> <li>Channel name</li> <li>Channel logo</li> <li>Stream profile</li> <li>Stream uptime</li> <li>Active stream for each currently active channel (drop down selector allows you to change the active stream)</li> <li>Stream stats (only available for ffmpeg or custom ffmpeg stream profiles)<ul> <li>Video resolution</li> <li>Source frames per second</li> <li>Video codec</li> <li>Audio codec</li> <li>Audio channel configuration</li> <li>Stream type (MPEGTS, HLS)</li> <li>Current speed</li> </ul> </li> <li>Stream speed (current and average)</li> <li>Stream total data served</li> <li>Number of watchers</li> <li>IP addresses and associated User-Agents</li> </ul> </li> <li>You can force stop any current streams by clicking the  \"Stop Channel\" button</li> </ul>"},{"location":"user-guide/#plugins","title":"Plugins","text":"<p>From the plugins page you can import, manage, and delete dispatcharr plugins. Plugin descriptions are available on discord</p> <ul> <li>Press the \"Import Plugin\" button to add a plugin, or load one into <code>/data/plugins</code> and reload.</li> <li>Remove a plugin by clicking the  Delete plugin button</li> <li>Enable/disable a plugin by clicking the Toggle icon to the right of the Delete plugin button</li> </ul> <p>Info</p> <p>Interested in plugin development? View plugin development documentation on the dispatcharr github </p>"},{"location":"user-guide/#users","title":"Users","text":"<p>From the Users page you can create and manage all Dispatcharr users. There are 3 types of users:</p> <ol> <li>Admin<ul> <li>Has total access in Dispatcharr</li> <li>XC login enabled only if an XC Password is set for the user</li> </ul> </li> <li>Standard User<ul> <li>Has access to Dispatcharr UI, but only the Channels, TV Guide, and Settings pages</li> <li>May allow access to all Channel Profiles or restrict to a subset</li> <li>In Settings, only able to change UI settings</li> <li>XC login enabled only if an XC Password is set for the user</li> </ul> </li> <li>Streamer<ul> <li>No access to the Dispatcharr UI</li> <li>This user level is for XC login only</li> </ul> </li> </ol>"},{"location":"user-guide/#logo-manager","title":"Logo Manager","text":"<p>From the Logo Manager page you can upload and manage logos.  </p> <p>Info</p> <p>Dispatcharr will also automatically scan <code>/data/logos</code> for existing files</p>"},{"location":"user-guide/#settings","title":"Settings","text":""},{"location":"user-guide/#ui-settings","title":"UI Settings","text":"<ul> <li>Table Size - Set the size of the channel rows in \"Channels\"</li> <li>Date format - Set the display of dates to either Day/Month/Year or Month/Day/Year</li> <li>Time format - Set the display of time to either 12 hour or 24 hour format</li> </ul>"},{"location":"user-guide/#dvr_1","title":"DVR","text":"<ul> <li>Enable Comskip (remove commercials after recording) - Toggle on or off</li> <li>Start early (minutes) - Begin recording this many minutes before the scheduled start.</li> <li>End late (minutes) - Continue recording this many minutes after the scheduled end.</li> <li>TV Path Template - Supports <code>{show}</code>, <code>{season}</code>, <code>{episode}</code>, <code>{sub_title}</code>, <code>{channel}</code>, <code>{year}</code>, <code>{start}</code>, <code>{end}</code>. Use format specifiers like <code>{season:02d}</code>. Relative paths are under your library dir.</li> <li>TV Fallback Template - Template used when an episode has no season/episode. Supports <code>{show}</code>, <code>{start}</code>, <code>{end}</code>, <code>{channel}</code>, <code>{year}</code>.</li> <li>Movie Path Template - Supports <code>{title}</code>, <code>{year}</code>, <code>{channel}</code>, <code>{start}</code>, <code>{end}</code>. Relative paths are under your library dir.</li> <li>Movie Fallback Template - Template used when movie metadata is incomplete. Supports <code>{start}</code>, <code>{end}</code>, <code>{channel}</code>.</li> </ul>"},{"location":"user-guide/#stream-settings","title":"Stream Settings","text":"<ul> <li>Default User-Agent - Set the default User-Agent</li> <li>Default Stream Profile - Set the default Stream Profile</li> <li>Preferred Region - Set your preferred region</li> <li>Auto Import Mapped Files - Toggle on/off auto-importing of M3U files or EPG xml data from /data/epgs and/or /data/m3us</li> <li>M3U Hash Key - Set how to hash your M3U. This affects the Stale stream cleanup.<ul> <li>The default setting hashes on name, URL, and TVG-ID. That means that a provider change to a source stream that changes name, URL, or TVG-ID will result in a new stream being created in Dispatcharr. </li> <li>The original stream will disappear from Dispatcharr according to your Stale Stream Retention (days) setting for your M3U account</li> </ul> <p>Example</p> <p>Your provider regularly changes the names of certain PPV streams, but you have channels set up for these streams and don't want the stream to be deleted due to stale stream cleanup. Since the provider is changing the stream name, but not the URL or TVG-ID, you set your M3U hash key to <code>URL</code> and <code>TVG-ID</code> only</p> </li> </ul>"},{"location":"user-guide/#user-agents","title":"User-Agents","text":"<ul> <li>In the context of IPTV, a user agent is a string of text that identifies the client application (e.g., a player like Kodi or VLC) to the IPTV server. It's included in the HTTP headers of requests sent by the client to the server, informing the server about the type of device and software used to access the IPTV stream.</li> <li>Default Dispatcharr User-Agents are available for VLC, Chrome, and TiviMate</li> <li>Add your own User-Agent by clicking the \" Add User-Agent\" button on the Settings page<ul> <li>Name - a name for your user-agent</li> <li>User-Agent - The text to include for your user-agent string</li> <li>Description - (Optional) a description of the user-agent for your own use</li> </ul> </li> </ul>"},{"location":"user-guide/#stream-profiles","title":"Stream Profiles","text":"<ul> <li>There are 4 default stream profiles with the ability to create your own custom ones<ul> <li>ffmpeg - Dispatcharr will proxy streams via ffmpeg. No transcoding takes place with the default ffmpeg stream profile, it will just remux streams. Uses more system resources than proxy</li> <li>Proxy - Proxies the original streams, allowing you to use Dispatcharr features (redundant streams per channel), and adds a slight buffer to help with stream stability. Uses fewer system resources than ffmpeg</li> <li>Redirect - Redirects the original M3U stream URL to your client. There is no proxying with this profile</li> <li>streamlink - For custom streams based on the services supported by streamlink</li> </ul> </li> <li>Custom Stream Profiles - create your own custom stream profile by clicking the \"Add Stream Profile\" button on the Settings page<ul> <li>Name - a name for your stream profile</li> <li>Command - ffmpeg or streamlink</li> <li>Parameters - Set your custom ffmpeg or streamlink parameters</li> <li>User-Agent - Set the default user-agent for this stream profile</li> </ul> </li> </ul>"},{"location":"user-guide/#network-access","title":"Network Access","text":"<p>Allows you to restrict access to Dispatcharr by CIDR range. You may enter multiple CIDR ranges separated by commas. Default 0.0.0.0/0 allows all IPs</p> <p>Example</p> CIDR Range Number of IPs Range example 192.168.1.0/32 1 192.168.1.0 (single IP) 192.168.1.0/24 256 192.168.1.0 - 192.168.1.255 192.168.1.0/16 65,536 192.168.0.0 - 192.168.255.255 <ul> <li>M3U / EPG Endpoints - Limit access to M3U, EPG, and HDHR URLs</li> <li>Stream Endpoints - Limit network access to stream URLs, including XC stream URLs</li> <li>XC API - Limit access to the XC API</li> <li>UI - Limit access to the Dispatcharr UI </li> </ul>"},{"location":"user-guide/#proxy-settings","title":"Proxy Settings","text":"<p>These settings affect all stream profiles with the exception of redirect</p> <ul> <li>Buffering Timeout - Maximum time (in seconds) to wait for buffering before switching streams</li> <li>Buffering Speed - Speed threshold below which buffering is detected (1.0 = normal speed)</li> <li>Buffer Chunk TTL - Time-to-live for buffer chunks in seconds (how long stream data is cached)</li> <li>Channel Shutdown Delay - Delay in seconds before shutting down a channel after last client disconnects</li> <li>Channel Initialization Grace Period - Grace period in seconds during channel initialization </li> </ul>"},{"location":"user-guide/#advanced","title":"Advanced","text":""},{"location":"user-guide/#hardware-acceleration","title":"Hardware Acceleration","text":"<ul> <li>Dispatcharr does not currently support hardware acceleration directly, but you can use hardware acceleration with custom ffmpeg stream profiles. </li> <li>This will require mapping your hardware to the container and setting up a custom ffmpeg stream profile. </li> </ul>"},{"location":"user-guide/#mapping-hardware","title":"Mapping Hardware","text":"NVIDIAIntelNVIDIA (Unraid)Intel (Unraid) <ul> <li>Install the NVIDIA Container toolkit</li> <li>Add a deploy section to your docker-compose.yml</li> </ul> Example <pre><code>services:\n  dispatcharr:\n    # build:\n    #   context: .\n    #   dockerfile: Dockerfile\n    image: ghcr.io/dispatcharr/dispatcharr:latest\n    container_name: dispatcharr\n    ports:\n      - 9191:9191\n    volumes:\n      - dispatcharr_data:/data\n    environment:\n      - DISPATCHARR_ENV=aio\n      - REDIS_HOST=localhost\n      - CELERY_BROKER_URL=redis://localhost:6379/0\n    deploy:\n      resources:\n        reservations:\n          devices:\n            - driver: nvidia\n              count: all\n              capabilities: [gpu]\nvolumes:\n  dispatcharr_data:\n</code></pre> <ul> <li>Add a devices section to your docker-compose.yml</li> </ul> Example <pre><code>services:\n  dispatcharr:\n    # build:\n    #   context: .\n    #   dockerfile: Dockerfile\n    image: ghcr.io/dispatcharr/dispatcharr:latest\n    container_name: dispatcharr\n    ports:\n      - 9191:9191\n    volumes:\n      - dispatcharr_data:/data\n    environment:\n      - DISPATCHARR_ENV=aio\n      - REDIS_HOST=localhost\n      - CELERY_BROKER_URL=redis://localhost:6379/0\n    devices:\n      - /dev/dri:/dev/dri\n\nvolumes:\n  dispatcharr_data:\n</code></pre> <ul> <li>Install the NVIDIA Driver Package plugin from community apps if not already installed</li> <li>Edit the Dispatcharr docker container in Unraid<ul> <li>Toggle Advanced View On</li> <li>Go to Extra Parameters<ul> <li>Add <code>--runtime=nvidia</code></li> </ul> </li> <li>Scroll down and click \"Add another Path, Port, Variable, Label or Device\"<ul> <li>Config Type: Variable</li> <li>Name: <code>NVIDIA_VISIBLE_DEVICES</code></li> <li>Key: <code>NVIDIA_VISIBLE_DEVICES</code></li> <li>Value: <code>all</code></li> </ul> </li> <li>Click Save</li> <li>Again click \"Add another Path, Port, Variable, Label or Device\"<ul> <li>Config Type: Variable</li> <li>Name: <code>NVIDIA_DRIVER_CAPABILITIES</code></li> <li>Key: <code>NVIDIA_DRIVER_CAPABILITIES</code></li> <li>Value: <code>all</code></li> </ul> </li> <li>Click Save</li> </ul> </li> </ul> <ul> <li>Edit the Dispatcharr docker container in Unraid</li> <li>Scroll down and click \"Add another Path, Port, Variable, Label or Device\"<ul> <li>Config Type: Device</li> <li>Name: <code>/dev/dri</code></li> <li>Key: <code>/dev/dri</code></li> <li>Description: <code>Intel GPU</code></li> </ul> </li> <li>Click Save</li> </ul>"},{"location":"user-guide/#custom-stream-profiles","title":"Custom Stream Profiles","text":"<ul> <li>Open Dispatcharr</li> <li> <p>Navigate to Settings &gt; Add Stream Profile</p> <ul> <li>Name it anything you like</li> <li>Command <code>ffmpeg</code></li> <li>Parameters will vary based on your hardware type and streaming needs<ul> <li>See ffmpeg docs for more</li> </ul> </li> <li>Visit our discord for more user-submitted ffmpeg parameters</li> </ul> NVIDIAIntel VAAPIIntel QSV <p>Example</p> <ul> <li>Parameters: <code>-user_agent {userAgent} -hwaccel cuda -i {streamUrl} -c:v h264_nvenc -c:a copy -f mpegts pipe:1</code></li> </ul> <p>Example</p> <ul> <li>Parameters: <code>-user_agent {userAgent} -hwaccel vaapi -hwaccel_output_format vaapi -hwaccel_device /dev/dri/renderD128 -i {streamUrl} -c:a aac -c:v h264_vaapi -f mpegts pipe:1</code></li> </ul> <p>Example</p> <ul> <li>Parameters: <code>-hwaccel qsv -user_agent {userAgent} -i {streamUrl} -c:v h264_qsv -c:a aac -f mpegts pipe:1</code></li> </ul> </li> </ul>"},{"location":"user-guide/#process-priority-configuration","title":"Process Priority Configuration","text":"<p>Optional environment variables to adjust priority of various tasks. Lower values = higher priority. Range: -20 (highest) to 19 (lowest). Negative values require <code>cap_add: SYS_NICE</code> </p> <ul> <li><code>UWSGI_NICE_LEVEL</code> - Set priority for uWSGI, FFmpeg, and streaming. Default priority is 0, recommend -5 for high priority </li> <li><code>CELERY_NICE_LEVEL</code> - Set priority for Celery, EPG, and other background tasks. Default priority is 5 </li> </ul> <p>Example</p> <pre><code>    environment:\n      - UWSGI_NICE_LEVEL=-5\n      - CELERY_NICE_LEVEL=5\n\n    cap_add:\n      - SYS_NICE\n</code></pre>"},{"location":"user-guide/#nginx-reverse-proxy","title":"Nginx reverse proxy","text":"<p>HTTPS config example (streams only) <pre><code># Dispatcharr HTTPS DynuDNS\nserver {\n    listen 443 ssl;\n    server_name dispatcharr.yourdomain.com;  #Adjust for your domain\n\n    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;\n\n    location /proxy/ts/stream/ {\n        allow all;  # Allow everyone else\n        proxy_pass http://ubuntuserver:9191;  # Adjust for your server name or IP\n        proxy_set_header Host $host:443;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # CORS settings\n        add_header 'Access-Control-Allow-Origin' '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';\n    }\n\n    location / {\n        allow 10.0.0.0/22;  # Allow the entire network, adjust for your network\n        allow 10.1.0.0/24;  # Allow Wireguard, adjust for your network\n        deny all;  # Deny everyone else\n        proxy_pass http://ubuntuserver:9191;  # Adjust for your server name or IP\n        # WebSocket headers\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"Upgrade\";\n        proxy_set_header Host $host:443;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # CORS settings\n        add_header 'Access-Control-Allow-Origin' '*';\n        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';\n    }\n}  \n</code></pre></p>"}]}